#!/usr/bin/env python
from PyQt5 import QtWidgets, QtCore, uic
from pyqtgraph import PlotWidget
import pyqtgraph as pg
import sys
import numpy as np

from slsdet import Gotthard2
from pathlib import Path
import reuss as rs
class MainWindow(QtWidgets.QMainWindow):

    def __init__(self, *args, **kwargs):
        super(MainWindow, self).__init__(*args, **kwargs)

        self.rcv = rs.Gotthard2Receiver()
        self.rcv .udp_source = "10.1.2.125:50001"
        self.rcv .frames = int(1e6)
        self.rcv .fpath = Path("/home/l_msdetect/erik/tmp/g2")
        self.rcv.start()


        # #Setup detector and receiver
        self.det = Gotthard2()
        self.zmq_rcv = rs.PreviewReceiver('tcp://127.0.0.1:4547', timeout_ms=100)
        self.zmq_rcv.start()



        # #Load the UI Page
        uic.loadUi('g2panel.ui', self)

        self.startButton.clicked.connect(self.det.start)
        self.curve = self.plotWidget.plot(pen='y')

    def update_progress(self):
        self.progressBar.setValue(int(self.rcv.progress*100))

    def update_status(self):
        s = str(self.det.status).split('.')[1]
        self.statusLabel.setText(s)

    def update_plot(self):
        data = self.zmq_rcv.get_data()
        self.curve.setData(data[0:1280])


    def start(self):
        self.det.start()



def main():
    app = QtWidgets.QApplication(sys.argv)
    main = MainWindow()
    main.show()

    #Timer for updating the plot
    timer = QtCore.QTimer()
    timer.timeout.connect(main.update_status)
    timer.start(100)

    timer2 = QtCore.QTimer()
    timer2.timeout.connect(main.update_plot)
    timer2.start(100)

    timer3 = QtCore.QTimer()
    timer3.timeout.connect(main.update_progress)
    timer3.start(100)

    #Run the app
    app.exec_()

    # #Stop the receiving process before exiting
    # main.zmq_rcv.stop()



if __name__ == '__main__':
    main()

