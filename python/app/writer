#!/usr/bin/env python

import time
import os
import argparse
from pathlib import Path

import reuss as rs


def makedirs(base_path, label = ''):
    i = len(os.listdir(base_path))
    t = time.strftime("%d-%b-%Y_%H%M%S", time.localtime())
    path = os.path.join(base_path, f'{i:03d}_{t}{label}') + '/'
    print(path)
    os.makedirs(path)
    return Path(path)


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "-p", "--path", 
        help="Output base path", 
        type = Path, default=rs.config.path.data
    )
    parser.add_argument(
        "-s", "--stream", 
        help="zmq stream", 
        type=str, default="tcp://localhost:4545"
    )
    args = parser.parse_args()
        
    path = makedirs(args.path)

    writer = rs.ZmqWriter(args.stream)
    writer.set_path((path/'file').as_posix())
    input('Press enter key to start measure...')
    t0 = time.time()
    writer.start()
    input()
    writer.stop()
    t1 = time.time()
    n = writer.frames_written()
    t = t1-t0
    print(rs.color.clear(f"Wrote {n} frames in {t:.3}s {n/t:.0f} FPS"))


    x = input('Lower screen and press enter to measure pedestal or choose N to skip: ')
    if x != 'N':
        c = rs.DataCollector(args.stream, path = path)
        c.take_pedestal()
    print('Done')


